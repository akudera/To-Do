@use '../mixins' as *;

.main {
  &__content {
    padding: 40px 30px 20px;
    max-width: 700px;
    background-color: var(--color-menu-bg);
    border-radius: var(--border-radius-menu);
    border: var(--border);
  }
  
  &__header {
    width: 100%;
  }

  &__title {
    font-size: clamp(26px, 3.14vw, 32px);
  }

  &__controllers {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    justify-content: space-between;
    gap: 10px;
    width: 100%;
  }

  &__search-container {
    position: relative;
    grid-column: 3 span;
  }

  &__input {
    position: relative;
    width: 100%;
    font-size: clamp(14px, 1.57vw, 16px);
    background-color: var(--color-input-field);
    color: var(--color-text);
    
    &::placeholder {
      color: inherit;
      filter: brightness(0.8);
    }
  }

  &__search-img {
    position: absolute;
    display: block;
    top: 50%;
    right: 12px;
    transform: translateY(-50%);
    width: 30px;
    height: 30px;

    & svg path {
      transition-duration: var(--transition-duration);
      stroke: var(--color-text);
    }
  }

  &__controllers-operations {
    display: flex;
    column-gap: 10px;
    grid-column: 4 span;
    height: 35px;
    padding: 5px 20px;
    background-color: var(--color-task-bg);
    border: var(--border);
    border-radius: var(--border-radius)
  }

  &__controller {
    display: flex;
    justify-content: center;
    align-items: center;
    border: none;
    padding: 0;
    aspect-ratio: 1;
    background-color: transparent;
    transition: fill var(--transition-duration);

    & svg path {
      transition-duration: var(--transition-duration);
      stroke: var(--color-text);
    }

    &:hover svg path {
      stroke: var(--color-border);
    }

    &:last-child {
      margin-left: auto;
    }
  }

  &__list {
    position: relative;
    display: flex;
    flex-direction: column;
    row-gap: 10px;
    width: 100%;
  }

  &__item {
    width: 100%;
    border-radius: 4px;

    &:has(.is-dragging) {
      background-color: var(--color-components-bg);
    }
  }

  &__item-wrapper {
    @include list-item;
    justify-content: flex-start;
    min-width: 100%;
    background-color: var(--color-task-bg);
    border: var(--border);
    border-left: 5px solid var(--color-border);
    transition: background-color var(--transition-duration), transform var(--transition-duration);
  
    &:hover {
      background-color: var(--color-hover-task-bg);
      cursor: pointer;
    }
  
    &:has(.main__item-delete-button:hover) {
      background-color: var(--color-task-bg);
    }

    &:has(.main__item-checkbox:checked) {
      text-decoration: line-through;
      background-color: var(--color-complete-task-bg);
    }

    &.is-dragging {
      transform: scaleX(1.02);
      background-color: var(--color-hover-task-bg);
    }
  }

  &__item-dnd {
    @include control-button;
    flex-shrink: 0;
    width: 32px;
    padding: 5px 10px;
    background-color: transparent;
    margin-right: 0.63em;
    touch-action: none;

    & svg,
    & path {
      pointer-events: none;
    }
  }

  &__item-checkbox {
    align-self: flex-start;
    position: absolute;
    margin: 0;
    width: 32px;
    aspect-ratio: 1;
    z-index: 200;
    appearance: none;
    outline: none;
  }

  &__item-custom-checkbox {
    --check-image: url('/public/icons/Check.svg');
    align-self: flex-start;
    flex-shrink: 0;
    display: flex;
    width: 30px;
    aspect-ratio: 1;
    background-color: transparent;
    border: var(--border);
    border-width: 2px;
    border-radius: var(--border-radius-menu);
    margin-right: 0.63em;

    .main__item-checkbox:checked + & {
      background: var(--check-image) no-repeat center / contain;
    }

    .main__item-checkbox:focus-visible + & {
      outline: 3px dashed var(--color-border);
    }
  }

  &__item--info {
    @include list-item;
    background-color: var(--color-hover-task-bg);
    border: none;
  }

  &__item-title {
    font-size: 16px;

    &:not(:last-child) {
      margin-right: 8px;
    }
  }

  &__item-delete-button {
    @include control-button;
    align-self: flex-start;
    flex-shrink: 0;
    margin-left: auto;
    width: 30px;
    background-color: var(--color-components-bg);
    transition: var(--transition-duration) background-color;

    &:hover {
      background-color: var(--color-hover-components-bg);
    }

    & svg {
      width: 25px;
      aspect-ratio: 1;
      pointer-events: none;

      & path {
        stroke: var(--color-text)
      }
    }
  }
}

@media (max-width: 462px) {
  .main__search-container {
    grid-column: 4 span;
  }

  .main__button {
    grid-column: 4 span;
  }
}